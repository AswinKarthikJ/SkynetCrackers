@using SkynetCrackers.Client.Services.ProductService
@inject IProductService productService
@implements IDisposable

<ul class="list-group">
    @foreach (var product in productService.products)
    {
        <div class="list-group-item">
        <li class="media my-3">
            <div class="media-img-wrapper mr-2">
                <a href="/product/@product.Id">
                    <img class="media-img" src="@product.Image" alt="@product.Title" /> 
                </a>
            </div>
            <div class="media-body">
                <a href="/product/@product.Id">
                    <h4 class="mb-0">@product.Title</h4>    
                </a>
                <p>@product.Description</p>
                @if (product.OriginalPrice >product.Price)
                {
                    <h6 class="text-muted original-price">$@product.OriginalPrice</h6>
                }
                <h5 class="price">
                    $@product.Price
                </h5>
            </div>
        </li>
        </div>
    }
</ul>

@code {

    //     [Parameter]
    //     public int? CategoryId { get; set; }

    protected override void OnInitialized()
    {
        // await productService.LoadProducts();

        productService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        productService.OnChange -= StateHasChanged;
    }
}

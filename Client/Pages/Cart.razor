@page "/cart"
@inject ICartService cartService

<h3>Shopping Cart</h3>
@if (cartItems == null || cartItems.Count <= 0)
{
    <span>You have no items in your cart</span>
}
else
{
    <div>
        @foreach (var item in cartItems)
        {
            <div class="item-container">
                <div class="item-image-wrapper">
                        <img class="item-image" src="@item.Image" alt="@item.Title" />
                </div>
                <div class="item-name">
                    <h5><a href="/product/@item.Id">@item.Title</a></h5>
                    <button class="btn-delete" 
                    @onclick="@(() => DeleteItem(item))">Remove</button>
                </div>
                <InputNumber id="quantity" @bind-Value="item.Quantity"
                             class="form-control" style="width: 50px; height: 30px;" />
                &nbsp;
                &nbsp;&nbsp;
                <div class="item-price">
                    ₹@(item.Price * item.Quantity)
                    </div>                
            </div>
        }
        <div class="item-price">
            Total (@cartItems.Count): ₹@cartItems.Sum(item => item.Price * item.Quantity)
        </div>
    </div>
}


@code {
    List<CartItem> cartItems = new List<CartItem>();

    protected override async Task OnInitializedAsync()
    {
        cartItems = await cartService.GetCartItems();
    }

    private async Task DeleteItem(CartItem item)
    {
        await cartService.DeleteItem(item);
        cartItems = await cartService.GetCartItems();
    }
}
